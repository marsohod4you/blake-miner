<session jtag_chain="MBFTDI-Blaster v1.8b+ (64) [MBUSB-0]" jtag_device="@1: 10M50SA(.|ES)/10M50SC (0x031850DD)" sof_file="">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="lock mode" value="0"/>
    <multi attribute="frame size" size="2" value="1920,1001"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="jtag widget size" size="2" value="403,146"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="hierarchy widget visible" value="1"/>
    <single attribute="data log widget visible" value="1"/>
  </global_info>
  <instance enabled="true" entity_name="sld_signaltap" is_auto_node="yes" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="1"/>
      <single attribute="setup vertical scroll position" value="0"/>
      <single attribute="setup horizontal scroll position" value="0"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2018/03/03 18:58:53  #0">
      <clock name="m10pll:mpll_inst|altpll:altpll_component|m10pll_altpll:auto_generated|wire_pll1_clk[1]~clkctrl" polarity="posedge" tap_mode="probeonly"/>
      <config is_hps_trigger_out_selected="false" pipeline_level="0" ram_type="AUTO" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="8192" trigger_in_enable="yes" trigger_in_node="RxD" trigger_in_tap_mode="probeonly" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="TxD" tap_mode="classic"/>
          <wire name="RxD" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" tap_mode="probeonly"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="TxD" tap_mode="classic"/>
          <wire name="RxD" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" tap_mode="probeonly"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="TxD" tap_mode="classic"/>
          <wire name="RxD" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" tap_mode="probeonly"/>
          <wire name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" tap_mode="probeonly"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <unified_setup_data_view>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" tap_mode="probeonly" type="register"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="RxD" tap_mode="probeonly" type="input pin"/>
          <node duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="TxD" tap_mode="classic" type="output pin"/>
        </unified_setup_data_view>
        <data_view>
          <net data_index="2" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" storage_index="2" tap_mode="probeonly" trigger_index="2" type="unknown"/>
          <net data_index="3" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" storage_index="3" tap_mode="probeonly" trigger_index="3" type="unknown"/>
          <net data_index="4" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" storage_index="4" tap_mode="probeonly" trigger_index="4" type="unknown"/>
          <net data_index="5" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" storage_index="5" tap_mode="probeonly" trigger_index="5" type="unknown"/>
          <net data_index="6" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" storage_index="6" tap_mode="probeonly" trigger_index="6" type="unknown"/>
          <net data_index="7" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" storage_index="7" tap_mode="probeonly" trigger_index="7" type="unknown"/>
          <net data_index="8" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" storage_index="8" tap_mode="probeonly" trigger_index="8" type="unknown"/>
          <net data_index="9" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" storage_index="9" tap_mode="probeonly" trigger_index="9" type="unknown"/>
          <net data_index="10" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" storage_index="10" tap_mode="probeonly" trigger_index="10" type="unknown"/>
          <net data_index="1" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="RxD" storage_index="1" tap_mode="probeonly" trigger_index="1" type="unknown"/>
          <net data_index="0" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="TxD" storage_index="0" tap_mode="classic" trigger_index="0" type="unknown"/>
        </data_view>
        <setup_view>
          <net data_index="2" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[0]" storage_index="2" tap_mode="probeonly" trigger_index="2" type="unknown"/>
          <net data_index="3" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[1]" storage_index="3" tap_mode="probeonly" trigger_index="3" type="unknown"/>
          <net data_index="4" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[2]" storage_index="4" tap_mode="probeonly" trigger_index="4" type="unknown"/>
          <net data_index="5" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[3]" storage_index="5" tap_mode="probeonly" trigger_index="5" type="unknown"/>
          <net data_index="6" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[4]" storage_index="6" tap_mode="probeonly" trigger_index="6" type="unknown"/>
          <net data_index="7" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[5]" storage_index="7" tap_mode="probeonly" trigger_index="7" type="unknown"/>
          <net data_index="8" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[6]" storage_index="8" tap_mode="probeonly" trigger_index="8" type="unknown"/>
          <net data_index="9" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_byte[7]" storage_index="9" tap_mode="probeonly" trigger_index="9" type="unknown"/>
          <net data_index="10" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="serial_receive:serrx|uart_receiver:urx|tx_new_byte" storage_index="10" tap_mode="probeonly" trigger_index="10" type="unknown"/>
          <net data_index="1" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="RxD" storage_index="1" tap_mode="probeonly" trigger_index="1" type="unknown"/>
          <net data_index="0" duplicate_name_allowed="false" is_data_input="true" is_node_valid="true" is_storage_input="true" is_trigger_input="true" name="TxD" storage_index="0" tap_mode="classic" trigger_index="0" type="unknown"/>
        </setup_view>
        <trigger_in_editor bit_condition="either edge" is_enabled="true" is_hps_event_selected="false" is_hps_trigger_in_selected="false" is_node_post_fitting="true" is_node_selected="true" is_pin_selected="false" node_name="RxD" pin_name="auto_stp_trigger_in_auto_signaltap_0"/>
        <trigger_out_editor/>
      </presentation>
      <trigger attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2018/03/03 18:58:53  #1" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="64" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="either edge" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>11111111111
            <pwr_up_transitional>11111111111</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics/>
</session>
